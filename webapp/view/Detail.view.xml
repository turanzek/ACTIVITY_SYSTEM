<mvc:View
	controllerName="zint.activity.system.controller.Detail"
	xmlns="sap.m"
	xmlns:core="sap.ui.core"
	xmlns:smartFilterBar="sap.ui.comp.smartfilterbar"
	xmlns:smartTable="sap.ui.comp.smarttable"
	xmlns:html="http://www.w3.org/1999/xhtml"
	xmlns:app="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"
	xmlns:semantic="sap.f.semantic"
	xmlns:mvc="sap.ui.core.mvc"
	xmlns:table="sap.ui.table">

	<semantic:SemanticPage
		id="detailPage"
		busy="{detailView>/busy}"
		busyIndicatorDelay="{detailView>/delay}">
		<semantic:titleHeading>
			<Title
				text="{ActivityMonth}"
				level="H2"/>
		</semantic:titleHeading>
		<semantic:headerContent>
			<Button id="editButton" text= "{= ${detailModel>/editMode} === false ? 'Edit' : 'Display'  }" press="onEdit" icon="{= ${detailModel>/editMode} === false ? 'sap-icon://edit' : 'sap-icon://display'  }"/>
		</semantic:headerContent>
		 <semantic:content></semantic:content>
			<smartFilterBar:SmartFilterBar id="smartFilterBar" entitySet="LineItemsSet" persistencyKey="SmartFilter_Explored">
				<smartFilterBar:controlConfiguration>
					<smartFilterBar:ControlConfiguration key="Bukrs">
						<smartFilterBar:defaultFilterValues>
							<smartFilterBar:SelectOption low="0001">
							</smartFilterBar:SelectOption>
						</smartFilterBar:defaultFilterValues>
					</smartFilterBar:ControlConfiguration>
					<smartFilterBar:ControlConfiguration key="Gjahr">
						<smartFilterBar:defaultFilterValues>
							<smartFilterBar:SelectOption low="2014">
							</smartFilterBar:SelectOption>
						</smartFilterBar:defaultFilterValues>
					</smartFilterBar:ControlConfiguration>
				</smartFilterBar:controlConfiguration>
			</smartFilterBar:SmartFilterBar>

			<smartTable:SmartTable id="smartTable" entitySet="detailModel" smartFilterId="smartFilterBar"
				tableType="ResponsiveTable" useExportToExcel="true" beforeExport="onBeforeExport"
				useVariantManagement="true" useTablePersonalisation="true" header="Line Items" 
				showRowCount="true" persistencyKey="SmartTableAnalytical_Explored" enableAutoBinding="true"
				demandPopin="true" class="sapUiResponsiveContentPadding" enableAutoColumnWidth="true"   app:useSmartToggle="true">
				<VBox class="sapUiNoPadding sapUiNoMargin" backgroundDesign="Transparent">
				<ScrollContainer horizontal="true" vertical="true" height="600px">
				<Table items="{detailModel>/}" id="idDetailModel"  >
					<columns>
						<Column width="40px">
							<Text text=""/>
						</Column>
						<Column>
							<Text text="{i18n>PersonnelName}"/>
						</Column>
						<Column>
							<Text text="{i18n>ActivityDate}"/>
						</Column>
						<Column>
							<Text text="{i18n>ProjectCode}"/>
						</Column>
						<Column>
							<Text text="{i18n>ProjectName}"/>
						</Column>
						<Column>
							<Text text="{i18n>ActivityHour}"/>
						</Column>
						<Column>
							<Text text="{i18n>Description}"/>
						</Column>
					</columns>
					<items>
						<ColumnListItem
						class="{= ${detailModel>Weekend} ? 'myCustomBackground' : '' }">
							<cells>
								<CheckBox selected="false" select="onSelectBox"/>
								<Text text="{detailModel>PersonnelName} {detailModel>PersonnelSurname}"/>
								<!-- <Text text="{detailModel>ActivityDate}"/> -->
								<DatePicker id="inputActivityDate" editable="{detailModel>/editMode}" value="{
									path: 'detailModel>ActivityDate',
									type: 'sap.ui.model.type.Date',
									formatOptions: {
									style: 'short'
								}}"
								
								/>
								<Input id="inputProjectCode" value="{detailModel>ProjectCode}" editable="{detailModel>/editMode}" showValueHelp="true" valueHelpRequest="handleInputProjectCodeValueHelp"/>
								<Input id="inputProjectName" value="{detailModel>ProjectName}" editable="false"/>
								<Input value="{detailModel>ActivityDuration}" editable="{detailModel>/editMode}"/>
								<Input value="{detailModel>Description}" editable="{=!${detailModel>Weekend}}"/>
							</cells>
						</ColumnListItem>
					</items>
				</Table>

		</ScrollContainer>
		<ScrollContainer horizontal="true" vertical="true" height="600px">
				<Table items="{detailCostModel>/}" id="idDetailCostModel" >
					<columns>
						<Column>
							<Text text="{i18n>PersonnelName}"/>
						</Column>
						<Column>
							<Text text="{i18n>ActivityDate}"/>
						</Column>
						<Column>
							<Text text="{i18n>ProjectName}"/>
						</Column>
						<Column>
							<Text text="{i18n>CostType}"/>
						</Column>
						<Column>
							<Text text="{i18n>CostValue}"/>
						</Column>
						<Column>
							<Text text="{i18n>Description}"/>
						</Column>
					</columns>
					<items>
						<ColumnListItem>
							<cells>
								<DatePicker id="inputActivityDate2" editable="{detailModel>/editMode}" value="{
									path: 'detailCostModel>ActivityDate',
									type: 'sap.ui.model.type.Date',
									formatOptions: {
									style: 'short'
								}}"
								
								/>
								<Text text="{detailCostModel>ProjectCode}"/>
								<Text text="{detailCostModel>ProjectName}"/>
								<!-- <Text text="{detailModel>ActivityDate}"/> -->
								<Input id="inputCostType" value="{detailCostModel>CostType}" editable="{detailCostModel>/editMode}" showValueHelp="true" valueHelpRequest="handleInputCostTypeValueHelp"/>
								<!-- <Input value="{detailCostModel>ActivityDuration}"/> -->
								<Input value="{detailCostModel>Description}"/>
							</cells>
						</ColumnListItem>
					</items>
				</Table>
			</ScrollContainer>
		</VBox>
			</smartTable:SmartTable>		
				

		<!--Semantic ShareMenu Buttons-->
		<semantic:sendEmailAction>
			<semantic:SendEmailAction
				id="shareEmail"
				press=".onSendEmailPress"/>
		</semantic:sendEmailAction>

		<semantic:closeAction>
			<semantic:CloseAction
					id="closeColumn"
					press=".onCloseDetailPress"/>
		</semantic:closeAction>

		<semantic:fullScreenAction>
			<semantic:FullScreenAction
					id="enterFullScreen"
					visible="{= !${device>/system/phone} &amp;&amp; !${appView>/actionButtonsInfo/midColumn/fullScreen}}"
					press=".toggleFullScreen"/>
		</semantic:fullScreenAction>
		<semantic:exitFullScreenAction>
			<semantic:ExitFullScreenAction
					id="exitFullScreen"
					visible="{= !${device>/system/phone} &amp;&amp; ${appView>/actionButtonsInfo/midColumn/fullScreen}}"
					press=".toggleFullScreen"/>
		</semantic:exitFullScreenAction>

	</semantic:SemanticPage>

</mvc:View>